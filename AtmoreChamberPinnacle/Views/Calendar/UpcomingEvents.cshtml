@model AtmoreChamber.Models.UpcomingEventsViewModel
@using CalendarData = Google.Apis.Calendar.v3.Data;

@{
    ViewBag.Title = "Upcoming Events";
}

<h1>Upcoming Events</h1>

@helper FormatEventTime(CalendarData.EventDateTime when)
{
    // Either Date or DateTime is set, depending on whether or not the event is
    // an all-day event.
    if (when.DateTime == null)
    {
        <text>All day</text>
    }
    else
    {
        @:@when.DateTime.Value.ToShortTimeString()
    }
}
@helper FormatEventLength(CalendarData.EventDateTime start, CalendarData.EventDateTime end)
{
    var duration = end.DateTime - start.DateTime;
    if (duration == null)
    {
        <text>All day</text>
    }
    else
    {
        @:@string.Format(
          "{0} hour{1} {2} minute{3}",
          (int)duration.Value.TotalHours,
          duration.Value.TotalHours >= 2 ? "s" : "",
          (int)duration.Value.Minutes,
          duration.Value.Minutes >= 2 ? "s" : "")
    }
}

<h2>Upcoming Events</h2>

<table class="table">
    <thead>
        <tr>
            <th>Time</th>
            <th>Length</th>
            <th>Summary</th>
        </tr>
    </thead>

    @foreach (var group in Model.EventGroups)
    {
        <tbody>
            <tr><th colspan="4">@group.GroupTitle</th></tr>
            @foreach (var item in group.Events)
            {
                <tr>
                    <td>@FormatEventTime(item.Start)</td>
                    <td>@FormatEventLength(item.Start, item.End)</td>
                    <td>@item.Summary</td>
                </tr>
            }
        </tbody>
    }

</table>